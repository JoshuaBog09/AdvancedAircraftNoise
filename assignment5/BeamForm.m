% Assignment 5: Advanced Aircraft Noise

clear;
clc;

%% Import data from text file
% Script for importing data from the following text file:
%
%    filename: Array\Array.txt
%
% Auto-generated by MATLAB on 16-Feb-2024 14:20:26

% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 3);

% Specify range and delimiter
opts.DataLines = [1, Inf];
opts.Delimiter = "\t";

% Specify column names and types
opts.VariableNames = ["VarName1", "VarName2", "VarName3"];
opts.VariableTypes = ["double", "double", "double"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Import the data
Array = readtable("Array\Array.txt", opts);

% Convert to output type
Array = table2array(Array);

% Clear temporary variables
clear opts

load('Array\aircraft_noise_data_overhead_2020.mat');

h = 64.87;      % [m]
fs = 40000;     % [Hz]
n_mic = 32;     % [-]
c = 343;        % [m/s]

x_mic = Array(:,2);
y_mic = Array(:,3);

%% Main code

figure();
plot(x_mic, y_mic, "o");
hold on
axis equal
% add circle https://stackoverflow.com/a/29194105
pos = [[0 0]-1 2 2];

rectangle('Position',pos,'Curvature',[1 1]);

resolution = 1;  % [m]

X = -25:resolution:25;
Y = -25:resolution:25;

X_size = size(X,2);
Y_size = size(Y,2);

scanning_plane = zeros(X_size, Y_size);

%% 

microphone = 1;

T = 0.05;
N = length(p(microphone,:));
delta_t = T / N;
fs = 1 / delta_t;
delta_f = 1 / T;

fcf = [];

for microphone = 1:n_mic
    [S,F,T,P] = spectrogram(p(microphone,:), N, 0, N, fs, 'yaxis');
    fcf = [fcf; S.'];
end
% For every grid point, for every frequency

% gp_x = 1;
% gp_y = 1;
% k    = 10;

for x_plane = 1:X_size
    for y_plane = 1:Y_size
        
        disp([x_plane, y_plane]);

        inter = 0;
        
        for k = 1:length(F)
        
            r = sqrt((x_mic - X(x_plane)).^2 + (y_mic - Y(y_plane)).^2 + h^2);
            g = exp(-2*pi*1i*F(k)*(r/c)) ./ r;
            g_ct = ctranspose(g);
            
            x_coef = fcf(:,k);
            x_coef_ct = ctranspose(x_coef);
            
            inter = inter + g_ct*(x_coef*x_coef_ct)*g / abs(g.'*g);
        
        end
        
        inter = inter / length(F);
        
        scanning_plane(x_plane, y_plane) = inter;
    end
end

figure();
imagesc(X, Y, abs(scanning_plane))